x = file.choose()
head(x)
library(mutaframe)
library(shiny)
runApp()
byte <- read.csv("Bit.csv")
byte$Temperature <- as.numeric(byte$Temperature)
library(ggplot2)
head(byte)
library(shiny)
runApp()
setwd("~/Desktop/Karsten")
runApp()
install.packages('RMySQL')
runApp()
source('../Data Sets/age.R')
setwd("~/Desktop/Stat-585-Project/Data Sets")
source('../Data Sets/age.R')
source('../Data Sets/health.R')
# Add total
agesex = ddply(agesex, .(state), transform,
state_total = sum(freq))
# Pyramid Plot default (all states)
ggplot(data = agesex, aes(x = age, y = freq, fill=gender)) +
coord_flip() + geom_bar(subset = .(gender=="Female"), stat="identity") +
geom_bar(subset = .(gender=="Male"), stat="identity", aes(y=-freq))
#rcharts
library(rCharts)
p = dPlot(x = "state", y = "freq", groups = "age", data = healthsex, type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
source('../Data Sets/health.R')
# Plot percentage insured by state on state map
healthsex = ddply(healthsex, .(state), transform,
state_total = sum(freq))
healthstate = ddply(healthsex, .(state,coverage), summarise,
total = sum(freq),
state_total = state_total)
# Plot percentage insured by state and age
healthsex = ddply(healthsex, .(state,age), transform,
state_total = sum(freq))
healthage = ddply(healthsex, .(state, age, coverage), summarise,
freq = sum(freq),
state_total = state_total)
# Plot percentage insured by state and income
healthincome = ddply(healthincome, .(state,income), transform,
state_total = sum(freq))
qplot(freq/state_total, reorder(state, state_total),
data=healthage, colour = age,  facets = ~coverage)
qplot(freq/state_total, reorder(state, state_total),
data=healthage, colour = age,  facets = ~coverage)
healthsex = ddply(healthsex, .(state,age), transform,
state_total = sum(freq))
healthage = ddply(healthsex, .(state, age, coverage), summarise,
freq = sum(freq),
state_total = state_total)
library(rCharts)
p = dPlot(x = "state", y = "freq", groups = "age", data = subset(healthsex, coverage=="No"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
p = dPlot(x = "state", y = "freq", groups = "income", data = subset(healthincome, coverage=="private"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
source('../Data Sets/income.R')
medincome$region = tolower(med$state)
medmalefull = subset(medincome,part.full == 'full' & gender == 'male')
medmalefull$incomeind = '52,000 or more'
medmalefull$incomeind[medmalefull$income < 52000] = '48,0000 - 52,000'
medmalefull$incomeind[medmalefull$income < 48000] = '46,000 - 48,000'
medmalefull$incomeind[medmalefull$income < 46000] = '46,000 or less'
states <- map_data("state")
medplot = merge(medmalefull,states,by='region')
# Plot median income
qplot(long, lat, data=medplot, geom="polygon", order=order,
group=group, fill = incomeind)
# Order of state plots
qplot(income, reorder(state, income),
data=medmalefull)
p = dPlot(x = "state", y = "freq", groups = "gender", data = subset(emp, type=="Unemployed"), type = "bar")
source('../Data Sets/income.R')
p = dPlot(x = "state", y = "freq", groups = "gender", data = subset(emp, type=="Unemployed"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
p = dPlot(x = "state", y = "freq", groups = "age", data = subset(emp, type=="In.Armed.Forces"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
head(emp)
emp = ddply(emp, .(state), transform,
state_total = sum(freq))
source('../Data Sets/income.R')
source('../Data Sets/jobs.R')
head(emp)
p = dPlot(x = "state", y = "freq", groups = "type", data = emp, type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
source('../Data Sets/poverty.R')
head(pov)
p = dPlot(x = "state", y = "freq", groups = "age", data = healthsex, type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
qplot(long, lat, data=medplot, geom="polygon", order=order,
group=group, fill = incomeind)
qplot(freq/state_total, reorder(state, state_total),
data=subset(empgender, type == 'Employed'), colour = age)
# Make new datasets
emp = ddply(emp, .(state), transform,
state_total = sum(freq))
empage = ddply(emp, .(state, age, type), summarise,
freq = sum(freq),
state_total = state_total)
empgender = ddply(emp, .(state, gender, type), summarise,
freq = sum(freq),
state_total = state_total)
# Filter by type ignore gender
qplot(freq/state_total, reorder(state, state_total),
data=subset(empgender, type == 'Employed'), colour = age)
source('../Data Sets/jobs.R')
# Make new datasets
emp = ddply(emp, .(state), transform,
state_total = sum(freq))
empage = ddply(emp, .(state, age, type), summarise,
freq = sum(freq),
state_total = state_total)
pov = ddply(pov, .(state), transform,
state_total = sum(freq))
povstate = ddply(pov, .(state,level), summarise,
total = sum(freq),
state_total = state_total)
library(plyr)
# Make new datasets
emp = ddply(emp, .(state), transform,
state_total = sum(freq))
empage = ddply(emp, .(state, age, type), summarise,
freq = sum(freq),
state_total = state_total)
empgender = ddply(emp, .(state, gender, type), summarise,
freq = sum(freq),
state_total = state_total)
# Filter by type ignore gender
qplot(freq/state_total, reorder(state, state_total),
data=subset(empgender, type == 'Employed'), colour = age)
# Filter by type ignore age
empage = ddply(emp, .(state, age, type), summarise,
freq = sum(freq),
state_total = state_total)
head(pov)
p = dPlot(x = "state", y = "freq", groups = "level", data = pov, type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
p = dPlot(x = "state", y = "freq", groups = "education", data = pov, type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
p = dPlot(x = "state", y = "freq", groups = "household", data = pov, type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
# Plot percentage below by state on state map
pov = ddply(pov, .(state), transform,
state_total = sum(freq))
povstate = ddply(pov, .(state,level), summarise,
total = sum(freq),
state_total = state_total)
# Plot percentage below by state and household
pov = ddply(pov, .(state,household), transform,
state_total = sum(freq))
povhouse = ddply(pov, .(state, household, level), summarise,
freq = sum(freq),
state_total = state_total)
# Plot percentage below by state and education
pov = ddply(pov, .(state,education), transform,
state_total = sum(freq))
poved = ddply(pov, .(state, education, level), summarise,
freq = sum(freq),
state_total = state_total)
states <- map_data("state")
povplot = merge(pov,states,by='region')
# Plot median income
qplot(long, lat, data=povplot, geom="polygon", order=order,
group=group, fill = frq/state_total)
states <- map_data("state")
povplot = merge(pov,states,by='region')
pov$region = tolower(pov$state)
states <- map_data("state")
povplot = merge(pov,states,by='region')
# Plot median income
qplot(long, lat, data=povplot, geom="polygon", order=order,
group=group, fill = frq/state_total)
qplot(long, lat, data=povplot, geom="polygon", order=order,
group=group, fill = freq/state_total)
qplot(long, lat, data=povplot, geom="polygon", order=order,
group=group, fill = freq/state_total)
head(pov)
pov$region = tolower(pov$state)
povbelow = subset(pov, level == 'below.poverty.level')
states <- map_data("state")
povplot = merge(povbelow,states,by='region')
dim(povbelow)
pov = ddply(pov, .(state), transform,
state_total = sum(freq))
povstate = ddply(pov, .(state,level), summarise,
total = sum(freq),
state_total = state_total)
pov = ddply(pov, .(state), transform,
state_total = sum(freq))
head(pov)
povstate = ddply(pov, .(state,level), summarise,
total = sum(freq),
state_total = state_total)
povstate = ddply(pov, .(state,level), summarise,
total = sum(freq))
head(povstate)
povstate = ddply(pov, .(state), transform,
state_total = sum(total))
povstate = ddply(povstate, .(state), transform,
state_total = sum(total))
head(povstate)
pov$region = tolower(pov$state)
povbelow = subset(povstate, level == 'below.poverty.level')
states <- map_data("state")
povplot = merge(povbelow,states,by='region')
povstate$region = tolower(povstate$state)
povbelow = subset(povstate, level == 'below.poverty.level')
states <- map_data("state")
povplot = merge(povbelow,states,by='region')
# Plot median income
qplot(long, lat, data=povplot, geom="polygon", order=order,
group=group, fill = freq/state_total)
qplot(long, lat, data=povplot, geom="polygon", order=order,
group=group, fill = total/state_total)
povplot$percentage = povplot$total / povplot$state_total
table(povplot$percentage)
povstate$region = tolower(povstate$state)
povbelow = subset(povstate, level == 'below.poverty.level')
states <- map_data("state")
povplot = merge(povbelow,states,by='region')
povplot$percentage = povplot$total / povplot$state_total
povplot$percentageind = NULL
povplot$percentageind[povplot$percentage > .05 & povplot$percentage <= .07 ] = '.05 - .07'
povplot$percentageind[povplot$percentage > .07 & povplot$percentage <= .09 ] = '.07 - .09'
povplot$percentageind[povplot$percentage > .09 & povplot$percentage <= .11 ] = '.09 - .11'
povplot$percentageind[povplot$percentage > .11 & povplot$percentage <= .13 ] = '.11 - .13'
povplot$percentageind[povplot$percentage > .13 ] = '.13<'
# Plot median income
ggplot(povplot, aes(long,lat)) +
geom_polygon(aes(long, lat, order=order, fill=percentageind, group=group)) +
theme_bw() + coord_map() +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.title.x=element_blank(),
axis.text.y = element_blank(),
axis.title.y=element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()) +
geom_path(aes(long, lat, order=order, group=group))
library(mapproj)
install.packages('mapproj')
library(mapproj)
ggplot(povplot, aes(long,lat)) +
geom_polygon(aes(long, lat, order=order, fill=percentageind, group=group)) +
theme_bw() + coord_map() +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.title.x=element_blank(),
axis.text.y = element_blank(),
axis.title.y=element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()) +
geom_path(aes(long, lat, order=order, group=group))
povstate$region = tolower(povstate$state)
povbelow = subset(povstate, level == 'below.poverty.level')
states <- map_data("state")
povplot = merge(povbelow,states,by='region')
povplot$percentage = povplot$total / povplot$state_total
povplot$percentageind = NULL
povplot$percentageind[povplot$percentage > .05 & povplot$percentage <= .07 ] = '.07 and below'
povplot$percentageind[povplot$percentage > .07 & povplot$percentage <= .09 ] = '.07 - .09'
povplot$percentageind[povplot$percentage > .09 & povplot$percentage <= .11 ] = '.09 - .11'
povplot$percentageind[povplot$percentage > .11 & povplot$percentage <= .13 ] = '.11 - .13'
povplot$percentageind[povplot$percentage > .13 ] = '.13 and above'
# Plot median income
ggplot(povplot, aes(long,lat)) +
geom_polygon(aes(long, lat, order=order, fill=percentageind, group=group)) +
theme_bw() + coord_map() +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.title.x=element_blank(),
axis.text.y = element_blank(),
axis.title.y=element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()) +
geom_path(aes(long, lat, order=order, group=group))
povstate$region = tolower(povstate$state)
povbelow = subset(povstate, level == 'below.poverty.level')
states <- map_data("state")
povplot = merge(povbelow,states,by='region')
povplot$percentage = povplot$total / povplot$state_total
povplot$percentageind = NULL
povplot$percentageind[povplot$percentage > .05 & povplot$percentage <= .07 ] = '.07  and below'
povplot$percentageind[povplot$percentage > .07 & povplot$percentage <= .09 ] = '.07 - .09'
povplot$percentageind[povplot$percentage > .09 & povplot$percentage <= .11 ] = '.09 - .11'
povplot$percentageind[povplot$percentage > .11 & povplot$percentage <= .13 ] = '.11 - .13'
povplot$percentageind[povplot$percentage > .13 ] = '.13 and above'
# Plot median income
ggplot(povplot, aes(long,lat)) +
geom_polygon(aes(long, lat, order=order, fill=percentageind, group=group)) +
theme_bw() + coord_map() +
theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
axis.title.x=element_blank(),
axis.text.y = element_blank(),
axis.title.y=element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()) +
geom_path(aes(long, lat, order=order, group=group))
source('../Data Sets/university.R')
head(univ)
levels(univ$school)
p = dPlot(x = "state", y = "freq", groups = "school", data = subset(univ, age=="18.to.24"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
library(shiny)
runApp()
setwd("~/Desktop/Stat-585-Project/Shiny")
runApp()
runApp()
runApp()
