geom_segment(aes(x=startLong, y=startLat, xend=endLong, yend=endLat,
showSelected=year),
colour="#55B1F7", data=UStornadoes) +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot()+
make_tallrect(UStornadoCounts, "year")+
make_text(UStornadoes, 1980, 200, "state") +
geom_line(aes(year, count, clickSelects=state, group=state),
data=UStornadoCounts, alpha=3/5, size=4) +
ylab("Number of Tornadoes") +
xlab("Year")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
map <- ggplot()+
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="black", colour="grey") +
geom_segment(aes(x=startLong, y=startLat, xend=endLong, yend=endLat,
showSelected=year),
colour="#55B1F7", data=UStornadoes) +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot()+
make_tallrect(UStornadoCounts, "year")+
make_text(UStornadoes, 1980, 200, "state") +
geom_line(aes(year, count, clickSelects=state, group=state),
data=UStornadoCounts, alpha=3/5, size=4) +
ylab("Number of Tornadoes") +
xlab("Year")
install.packages('animint')
library(devtools)  # devtools package, allows you to install from github repositories
install_github("animint", "tdhock")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
map <- ggplot()+
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="black", colour="grey") +
geom_segment(aes(x=startLong, y=startLat, xend=endLong, yend=endLat,
showSelected=year),
colour="#55B1F7", data=UStornadoes) +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot()+
make_tallrect(UStornadoCounts, "year")+
make_text(UStornadoes, 1980, 200, "state") +
geom_line(aes(year, count, clickSelects=state, group=state),
data=UStornadoCounts, alpha=3/5, size=4) +
ylab("Number of Tornadoes") +
xlab("Year")
library(ggplot2)
library(animint)
library(plyr)
set.seed(33)
boxplotdata <- rbind(data.frame(x = 1:50, y = sort(rnorm(50, 3, 1)), group = "N(3,1)"),
data.frame(x = 1:50, y = sort(rnorm(50, 0, 1)), group = "N(0,1)"), data.frame(x = 1:50,
y = sort(rgamma(50, 2, 1/3)), group = "Gamma(2,1/3)"))
boxplotdata <- ddply(boxplotdata, .(group), transform, ymax = max(y), ymin = min(y),
med = median(y))
g1 <- ggplot() + geom_density(data = boxplotdata, aes(x = y, group = group,
fill = group), alpha = 0.5) + scale_fill_discrete("Distribution") + xlab("x") +
ggtitle("geom_density")
g1
boxplotdata
gg2animint(list(plot1 = g1), out.dir = "./g1")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
map <- ggplot() +
geom_polygon(aes(x=long, y=lat, group=group), data=USpolygons, fill="black", colour="grey") +
geom_segment(aes(x=startLong, y=startLat, xend=endLong, yend=endLat, showSelected=year),
colour="#55B1F7", data=UStornadoes) +
ggtitle("Tornadoes in the US")
ts <- ggplot() +
stat_summary(aes(year, year, clickSelects=year), data=UStornadoes, fun.y=length, geom="bar") +
ggtitle("Number of Recorded Tornadoes, 1950-2006") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 400),  height=list(400))
# specify plot widths to be 970px and 400px respectively,
# and specify 400 px as the plot height for both plots
gg2animint(tornado.bar, out.dir = "tornado-bar")
map <- ggplot()+
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="black", colour="grey") +
geom_segment(aes(x=startLong, y=startLat, xend=endLong, yend=endLat,
showSelected=year),
colour="#55B1F7", data=UStornadoes) +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot()+
make_tallrect(UStornadoCounts, "year")+
make_text(UStornadoes, 1980, 200, "state") +
geom_line(aes(year, count, clickSelects=state, group=state),
data=UStornadoCounts, alpha=3/5, size=4) +
ylab("Number of Tornadoes") +
xlab("Year")
time <- list(variable="year", ms=2000) # new part of the list passed to gg2animint().
tornado.anim <- list(map=map, ts=ts, time=time, width=list(map = 970, ts = 400),  height=list(400)) # pass the time object in as another object in the main list.
gg2animint(tornado.anim, "tornado-anim")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="black", colour="grey") +
geom_segment(aes(x=startLong, y=startLat, xend=endLong, yend=endLat,
showSelected=year),
colour="#55B1F7", data=UStornadoes) +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="black", colour="grey") +
geom_segment(aes(x=startLong, y=startLat, xend=endLong, yend=endLat,
showSelected=year),
colour="#55B1F7", data=UStornadoes) +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="black", colour="grey") +
geom_segment(aes(x=startLong, y=startLat, xend=endLong, yend=endLat,
showSelected=year),
colour="#55B1F7", data=UStornadoes) +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
gg2animint(tornado.ts.bar, "tornado-ts-bar")
str(tornado.ts.bar)
length(tornado.ts.bar)
tornado.ts.bar[[1]]
tornado.ts.bar[[2]]
tornado.ts.bar[[3]]
tornado.ts.bar[[4]]
?make_text
head(USpolygons)
head(UStornadoCounts)
head(UStornadoes)
head(USpolygons)
head(UStornadoes)
map
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="black", colour="grey") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
?gg2animint
gg2animint(tornado.ts.bar, "tornado-ts-bar")
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, color="red", colour="grey") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, color="blue") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="black", colour="red") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="red", colour="black") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="blue", colour="black") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
?gg2animint
gg2animint(tornado.ts.bar, "tornado-ts-bar")
?make_text
gg2animint(tornado.ts.bar, "tornado-ts-bar")
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="blue", colour="black") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 180, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="blue", colour="black") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 180, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="blue", colour="black") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 100, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
head(med)
subset(med, region = 'alabama')
subset(med, region == 'alabama')
library(acs)
library(ggplot2)
library(reshape2)
library(plyr)
library(dplyr)
#B27001 Health Insurance Coverage Status by Sex by Age
states = geo.make(state = "*")
health = acs.fetch(endyear = 2012, span = 5, geography = states, table.number = "B27001", col.names="pretty")
health.df = data.frame(health@estimate)
names(health.df) = gsub("Health.Insurance.Coverage.Status.by.Sex.by.Age..", "", names(health.df))
names(health.df) = gsub(".health.insurance.coverage", "", names(health.df))
health.df = health.df[,-c(1,2,30)]
health.df = health.df[,-seq(1,52,3)]
health.df$state = rownames(health.df)
rownames(health.df) = NULL
health.melt = melt(health.df, id='state')
healthcols = ldply(strsplit(as.character(health.melt$variable), "\\.\\."))
healthsex = data.frame(state = health.melt$state, gender = healthcols$V1,
age = healthcols$V2, coverage = healthcols$V3, freq = health.melt$value)
healthsex$age = factor(healthsex$age, levels(healthsex$age)[c(9,6,1:5,7,8)])
#B27015 Health Insurance Coverage Status and Type by Household Income in the Past 12 Months
states = geo.make(state = "*")
health = acs.fetch(endyear = 2012, span = 5, geography = states, table.number = "B27015", col.names="pretty")
health.df = data.frame(health@estimate)
names(health.df) = gsub("Health.Insurance.Coverage.Status.and.Type.by.Household.Income.in.the.Past.12.Months..", "", names(health.df))
names(health.df) = gsub("health.insurance.|.health.insurance|.coverage|coverage.|With.", "", names(health.df))
names(health.df) = gsub("Under..", "Under.", names(health.df))
names(health.df) = gsub("to..", "to.", names(health.df))
health.df = health.df[,-c(1,seq(2,22,5),seq(3,23,5))]
health.df$state = rownames(health.df)
rownames(health.df) = NULL
health.melt = melt(health.df, id='state')
healthcols = ldply(strsplit(as.character(health.melt$variable), "\\.\\."))
healthincome = data.frame(state = health.melt$state, income = healthcols$V1,
coverage = healthcols$V2, freq = health.melt$value)
healthincome$income = factor(healthincome$income, levels(healthincome$income)[c(5,2:4,1)])
# Plot percentage insured by state on state map
healthsex = ddply(healthsex, .(state), transform,
state_total = sum(freq))
healthstate = ddply(healthsex, .(state,coverage), summarise,
total = sum(freq),
state_total = state_total)
# Plot percentage insured by state and age
healthsex = ddply(healthsex, .(state,age), transform,
state_total = sum(freq))
healthage = ddply(healthsex, .(state, age, coverage), summarise,
freq = sum(freq),
state_total = state_total)
# Plot percentage insured by state and income
healthincome = ddply(healthincome, .(state,income), transform,
state_total = sum(freq))
qplot(freq/state_total, reorder(state, state_total),
data=healthage, colour = age,  facets = ~coverage)
head(healthsex)
subset(healthsex, state == 'Alabama')
subset(healthstate, state == 'Alabama')
subset(healthage, state == 'Alabama')
subset(healthincome, state == 'Alabama')
?geom_bar
ggplot() +
geom_bar(x = income, y = freq/state_total, data = healthincome ) +
facet_wrap(~coverage)
ggplot() +
geom_bar(aes(x = income, y = freq/state_total), data = healthincome ) +
facet_wrap(~coverage)
healthincome$percent = freq / state_total
healthincome$percent = healthincome$freq / healthincome$state_total
ggplot() +
geom_bar(aes(x = income, y = freq/state_total), data = healthincome ) +
facet_wrap(~coverage)
ggplot() +
geom_bar(aes(x = income, y = percent), data = healthincome ) +
facet_wrap(~coverage)
head(healthincome)
ggplot(healthincome, aes(x=income, y=percent)) +
geom_bar() +
facet_wrap(~coverage)
?geom_bar
qplot(income,freq/state_total, geom='bar', facets = ~coverage)
qplot(income,freq/state_total, geom='bar', facets = ~coverage, data=healthincome)
?geom_bar
qplot(income,freq/state_total, geom='bar', stat='identity', facets = ~coverage, data=healthincome)
qplot(income,freq/state_total, geom='bar', stat='identity',  data=healthincome)
qplot(income,freq/state_total, geom='bar', stat='identity', color=income, data=healthincome)
qplot(income,freq/state_total, geom='bar', stat='identity', facets = ~coverage, data=healthincome)
qplot(income,freq/state_total, geom='bar', stat='identity', fill = factor(coverage), data=healthincome)
head(emp)
head(pov)
source('../Plots/age.R')
source('../Data Sets/age.R')
source('../Data Sets/age.R')
getwd()
setwd("~/Desktop/Stat-585-Project/Data Sets")
source('../Data Sets/age.R')
source('../Data Sets/health.R')
medtable = med
states = geo.make(state = "*")
median = acs.fetch(endyear = 2012, span = 5, geography = states,
table.number = "B19326", col.names="pretty")
med = data.frame(median@estimate)
names(med) = gsub("Median.Income.by.Sex.by.Work.Experience.for.the.Population.15..Years..Median.income.in.the.past.12.months..in.2012.inflation.adjusted.dollars.....", "", names(med))
names(med) = c('total','male_total','male_full','male_other',
'female_total','female_full','female_other')
med$state = factor(rownames(med))
rownames(med) = NULL
head(med)
source('../Data Sets/foodstamps.R')
qplot(total, reorder(state, total), data=total_pct)
