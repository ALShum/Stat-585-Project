library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="black", colour="grey") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
?gg2animint
gg2animint(tornado.ts.bar, "tornado-ts-bar")
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, color="red", colour="grey") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, color="blue") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="black", colour="red") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="red", colour="black") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="blue", colour="black") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
?gg2animint
gg2animint(tornado.ts.bar, "tornado-ts-bar")
?make_text
gg2animint(tornado.ts.bar, "tornado-ts-bar")
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="blue", colour="black") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 180, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
library(ggplot2)
library(plyr)
library(animint)
library(maps)
data(UStornadoes) # load the Tornadoes data from the animint package
USpolygons <- map_data("state")
USpolygons$state = state.abb[match(USpolygons$region, tolower(state.name))]
UStornadoCounts <-
ddply(UStornadoes, .(state, year), summarize, count=length(state))
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="blue", colour="black") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 180, 200, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
map <- ggplot() +
make_text(UStornadoCounts, -100, 50, "year", "Tornadoes in %d") +
geom_polygon(aes(x=long, y=lat, group=group, clickSelects=state),
data=USpolygons, fill="blue", colour="black") +
theme(axis.line=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank(), axis.title=element_blank())
ts <- ggplot() +
make_text(UStornadoes, 1980, 100, "state") +
geom_bar(aes(year, count, clickSelects=year, showSelected=state),
data=UStornadoCounts, stat="identity", position="identity") +
ylab("Number of Tornadoes") +
xlab("Year")
tornado.ts.bar <- list(map = map, ts = ts, width=list(map = 970, ts = 500),  height=list(500))
gg2animint(tornado.ts.bar, "tornado-ts-bar")
head(med)
subset(med, region = 'alabama')
subset(med, region == 'alabama')
library(acs)
library(ggplot2)
library(reshape2)
library(plyr)
library(dplyr)
#B27001 Health Insurance Coverage Status by Sex by Age
states = geo.make(state = "*")
health = acs.fetch(endyear = 2012, span = 5, geography = states, table.number = "B27001", col.names="pretty")
health.df = data.frame(health@estimate)
names(health.df) = gsub("Health.Insurance.Coverage.Status.by.Sex.by.Age..", "", names(health.df))
names(health.df) = gsub(".health.insurance.coverage", "", names(health.df))
health.df = health.df[,-c(1,2,30)]
health.df = health.df[,-seq(1,52,3)]
health.df$state = rownames(health.df)
rownames(health.df) = NULL
health.melt = melt(health.df, id='state')
healthcols = ldply(strsplit(as.character(health.melt$variable), "\\.\\."))
healthsex = data.frame(state = health.melt$state, gender = healthcols$V1,
age = healthcols$V2, coverage = healthcols$V3, freq = health.melt$value)
healthsex$age = factor(healthsex$age, levels(healthsex$age)[c(9,6,1:5,7,8)])
#B27015 Health Insurance Coverage Status and Type by Household Income in the Past 12 Months
states = geo.make(state = "*")
health = acs.fetch(endyear = 2012, span = 5, geography = states, table.number = "B27015", col.names="pretty")
health.df = data.frame(health@estimate)
names(health.df) = gsub("Health.Insurance.Coverage.Status.and.Type.by.Household.Income.in.the.Past.12.Months..", "", names(health.df))
names(health.df) = gsub("health.insurance.|.health.insurance|.coverage|coverage.|With.", "", names(health.df))
names(health.df) = gsub("Under..", "Under.", names(health.df))
names(health.df) = gsub("to..", "to.", names(health.df))
health.df = health.df[,-c(1,seq(2,22,5),seq(3,23,5))]
health.df$state = rownames(health.df)
rownames(health.df) = NULL
health.melt = melt(health.df, id='state')
healthcols = ldply(strsplit(as.character(health.melt$variable), "\\.\\."))
healthincome = data.frame(state = health.melt$state, income = healthcols$V1,
coverage = healthcols$V2, freq = health.melt$value)
healthincome$income = factor(healthincome$income, levels(healthincome$income)[c(5,2:4,1)])
# Plot percentage insured by state on state map
healthsex = ddply(healthsex, .(state), transform,
state_total = sum(freq))
healthstate = ddply(healthsex, .(state,coverage), summarise,
total = sum(freq),
state_total = state_total)
# Plot percentage insured by state and age
healthsex = ddply(healthsex, .(state,age), transform,
state_total = sum(freq))
healthage = ddply(healthsex, .(state, age, coverage), summarise,
freq = sum(freq),
state_total = state_total)
# Plot percentage insured by state and income
healthincome = ddply(healthincome, .(state,income), transform,
state_total = sum(freq))
qplot(freq/state_total, reorder(state, state_total),
data=healthage, colour = age,  facets = ~coverage)
head(healthsex)
subset(healthsex, state == 'Alabama')
subset(healthstate, state == 'Alabama')
subset(healthage, state == 'Alabama')
subset(healthincome, state == 'Alabama')
?geom_bar
ggplot() +
geom_bar(x = income, y = freq/state_total, data = healthincome ) +
facet_wrap(~coverage)
ggplot() +
geom_bar(aes(x = income, y = freq/state_total), data = healthincome ) +
facet_wrap(~coverage)
healthincome$percent = freq / state_total
healthincome$percent = healthincome$freq / healthincome$state_total
ggplot() +
geom_bar(aes(x = income, y = freq/state_total), data = healthincome ) +
facet_wrap(~coverage)
ggplot() +
geom_bar(aes(x = income, y = percent), data = healthincome ) +
facet_wrap(~coverage)
head(healthincome)
ggplot(healthincome, aes(x=income, y=percent)) +
geom_bar() +
facet_wrap(~coverage)
?geom_bar
qplot(income,freq/state_total, geom='bar', facets = ~coverage)
qplot(income,freq/state_total, geom='bar', facets = ~coverage, data=healthincome)
?geom_bar
qplot(income,freq/state_total, geom='bar', stat='identity', facets = ~coverage, data=healthincome)
qplot(income,freq/state_total, geom='bar', stat='identity',  data=healthincome)
qplot(income,freq/state_total, geom='bar', stat='identity', color=income, data=healthincome)
qplot(income,freq/state_total, geom='bar', stat='identity', facets = ~coverage, data=healthincome)
qplot(income,freq/state_total, geom='bar', stat='identity', fill = factor(coverage), data=healthincome)
source('../Data Sets/age.R')
setwd("~/Desktop/Stat-585-Project/Data Sets")
source('../Data Sets/age.R')
agesex = ddply(agesex, .(state), transform,
state_total = sum(freq))
ggplot(data = agesex, aes(x = age, y = freq, fill=gender)) +
coord_flip() + geom_bar(subset = .(gender=="Female"), stat="identity") +
geom_bar(subset = .(gender=="Male"), stat="identity", aes(y=-freq))
head(agesex)
qplot(freq/state_total,state, data=agesex)
qplot(freq/state_total,state, data=agesex, colour=age)
qplot(freq/state_total,state, data=agesex, colour=age, shape=gender)
source('../Data Sets/health.R')
# Plot percentage insured by state on state map
healthsex = ddply(healthsex, .(state), transform,
state_total = sum(freq))
healthstate = ddply(healthsex, .(state,coverage), summarise,
total = sum(freq),
state_total = state_total)
# Plot percentage insured by state and age
healthsex = ddply(healthsex, .(state,age), transform,
state_total = sum(freq))
healthage = ddply(healthsex, .(state, age, coverage), summarise,
freq = sum(freq),
state_total = state_total)
# Plot percentage insured by state and income
healthincome = ddply(healthincome, .(state,income), transform,
state_total = sum(freq))
qplot(freq/state_total, reorder(state, state_total),
data=healthage, colour = age,  facets = ~coverage)
#rcharts
library(rCharts)
p = dPlot(x = "state", y = "freq", groups = "age", data = subset(healthsex, coverage=="No"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
library(rCharts)
p = dPlot(x = "state", y = "freq", groups = "age", data = healthsex, type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
head(healthsex)
head(healthincome)
p = dPlot(x = "state", y = "freq", groups = "income", data = subset(healthincome, coverage=="private"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
library(rCharts)
p = dPlot(x = "state", y = "freq", groups = "income", data = subset(healthincome, coverage=="no"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
library(rCharts)
p = dPlot(x = "state", y = "freq", groups = "income", data = subset(healthincome, coverage=="no"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
p = dPlot(x = "state", y = "freq", groups = "income", data = subset(healthincome, coverage=="yes"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
p = dPlot(x = "state", y = "freq", groups = "income", data = subset(healthincome, coverage=="private"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
#rcharts
library(rCharts)
p = dPlot(x = "state", y = "freq", groups = "income", data = subset(healthincome, coverage=="no"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
library(rCharts)
p = dPlot(x = "state", y = "freq", groups = "age", data = subset(healthsex, coverage=="No"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
qplot(long, lat, data=medplot, geom="polygon", order=order,
group=group, fill = male_full)
qplot(long, lat, data=medplot, geom="polygon", order=order,
group=group, fill = female_full)
head(med)
head(medplot)
head(medplottable)
head(medincome)
source('../Data Sets/income.R')
head(medincome)
medincome$region = tolower(med$state)
states <- map_data("state")
medplot = merge(medincome,states,by='region')
medfull = ddply(subset(medincome, part.full=='full'), .(state),summarise,
income = mean(income))
head(medfull)
medincome$region = tolower(med$state)
medfull = ddply(subset(medincome, part.full=='full'), .(state),summarise,
income = mean(income))
states <- map_data("state")
medplot = merge(medincome,states,by='region')
head(medplot)
qplot(long, lat, data=medplot, geom="polygon", order=order,
group=group, fill = income)
head(medplot)
head(medincome)
medincome$region = tolower(med$state)
states <- map_data("state")
medplot = merge(medincome,states,by='region')
qplot(long, lat, data=medincome, geom="polygon", order=order,
group=group, fill = income)
medincome$region = tolower(med$state)
states <- map_data("state")
medplot = merge(medincome,states,by='region')
head(medincome)
qplot(long, lat, data=medplot, geom="polygon", order=order,
group=group, fill = income)
medincome$region = tolower(med$state)
states <- map_data("state")
medplot = merge(medincome,states,by='region')
# Plot median income
qplot(long, lat, data=medplot, geom="polygon", order=order,
group=group, fill = income)
head(medpldot)
head(medplot)
qplot(long, lat, data=subset(medplot,part.full == 'full' & gender == 'male'), geom="polygon", order=order,
group=group, fill = income)
qplot(medplot, reorder(state, income), data=medplot)
qplot(medplot, reorder(state, income), data=subset(medplot,part.full == 'full' & gender == 'male'))
qplot(medplot, state,
data=subset(medplot,part.full == 'full' & gender == 'male'))
qplot(long, lat, data=subset(medplot,part.full == 'full' & gender == 'male'), geom="polygon", order=order,
group=group, fill = income)
medmalefull = subset(medplot,part.full == 'full' & gender == 'male')
head(medmalefull)
qplot(medplot, reorder(state, income),
data=medmalefull)
qplot(long, lat, data=medmalefull, geom="polygon", order=order,
group=group, fill = income)
qplot(income, reorder(state, income),
data=medmalefull)
qplot(long, lat, data=medmalefull, geom="polygon", order=order,
group=group, fill = income)
qplot(income, reorder(state, income),
data=medmalefull)
table(medmalefull$income)
quantiles(medmalefull$income)
quantile(medmalefull$income)
dim(medmalefull)
head(medmalefull)
medincome$region = tolower(med$state)
table(medincome$income)
quantiles(medincome$income)
quantile(medincome$income)
medincome$region = tolower(med$state)
medmalefull = subset(medincome,part.full == 'full' & gender == 'male')
dim[medmalefull]
dim(medmalefull)
quantile(medmalefull$income)
table(medmalefull$income)
medincome$region = tolower(med$state)
medmalefull = subset(medincome,part.full == 'full' & gender == 'male')
medmalefull$incomeind = '>52,000'
medmalefull$incomeind[medmalefull$income < 52000] = '48,000-52,000'
medmalefull$incomeind[medmalefull$income < 48000] = '46,000-48,000'
medmalefull$incomeind[medmalefull$income < 46000] = '<46,000'
table(medmalefull$incomeind)
qplot(long, lat, data=medmalefull, geom="polygon", order=order,
group=group, fill = incomeind)
medincome$region = tolower(med$state)
medmalefull = subset(medincome,part.full == 'full' & gender == 'male')
medmalefull$incomeind = '>52,000'
medmalefull$incomeind[medmalefull$income < 52000] = '48,000-52,000'
medmalefull$incomeind[medmalefull$income < 48000] = '46,000-48,000'
medmalefull$incomeind[medmalefull$income < 46000] = '<46,000'
states <- map_data("state")
medplot = merge(medincome,states,by='region')
medmalefull = subset(medplot,part.full == 'full' & gender == 'male')
# Plot median income
qplot(long, lat, data=medmalefull, geom="polygon", order=order,
group=group, fill = incomeind)
head(medmalefull)
medincome$region = tolower(med$state)
medmalefull = subset(medincome,part.full == 'full' & gender == 'male')
medmalefull$incomeind = '>52,000'
medmalefull$incomeind[medmalefull$income < 52000] = '48,000-52,000'
medmalefull$incomeind[medmalefull$income < 48000] = '46,000-48,000'
medmalefull$incomeind[medmalefull$income < 46000] = '<46,000'
states <- map_data("state")
medplot = merge(medmalefull,states,by='region')
# Plot median income
qplot(long, lat, data=medmalefull, geom="polygon", order=order,
group=group, fill = incomeind)
head(medmalefull)
qplot(long, lat, data=medplot, geom="polygon", order=order,
group=group, fill = incomeind)
qplot(income, reorder(state, income),
data=medmalefull)
medincome$region = tolower(med$state)
medmalefull = subset(medincome,part.full == 'full' & gender == 'male')
medmalefull$incomeind = '52,000 or more'
medmalefull$incomeind[medmalefull$income < 52000] = '48,0000 - 52,000'
medmalefull$incomeind[medmalefull$income < 48000] = '46,000 - 48,000'
medmalefull$incomeind[medmalefull$income < 46000] = '46,000 or less'
states <- map_data("state")
medplot = merge(medmalefull,states,by='region')
# Plot median income
qplot(long, lat, data=medplot, geom="polygon", order=order,
group=group, fill = incomeind)
source('../Data Sets/income.R')
head(emptable)
head(emp)
library(rCharts)
p = dPlot(x = "state", y = "freq", groups = "gender", data = subset(healthincome, type=="In.Armed.Forces"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p = dPlot(x = "state", y = "freq", groups = "gender", data = subset(emp, type=="In.Armed.Forces"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
p = dPlot(x = "state", y = "freq", groups = "gender", data = subset(emp, type=="Unemployed"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
p = dPlot(x = "state", y = "freq", groups = "age", data = subset(emp, type=="Employed"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
p = dPlot(x = "state", y = "freq", groups = "gender", data = subset(emp, type=="Unemployed"), type = "bar")
p$xAxis(orderRule = "state")
p$yAxis(type = "addPctAxis")
p
source('../Data Sets/poverty.R')
head(pov)
